apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'maven-publish'

apply plugin: 'eclipse'
apply plugin: 'idea'

version="1.4.0"
description="${project.name} build script"
group="fastily"

repositories {
    jcenter()
}

dependencies {
    api "com.google.code.gson:gson:2.8.1"
    api "com.squareup.okhttp3:okhttp:3.9.0"
    
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.9.0'
}

def pomConfig = {
    inceptionYear '2014'
    licenses {
        license {
            name 'GNU General Public License, Version 3.0'
            url 'https://www.gnu.org/licenses/gpl-3.0.txt'
            distribution 'repo'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom.withXml {
                asNode().children().last() + pomConfig
            }

            artifact sourceJar
            artifact packageJavadoc
        }
    }
}

task writeNewPom {
    doLast {
        pom {
            project {
                inceptionYear '2014'
                licenses {
                    license {
                        name 'GNU General Public License, Version 3.0'
                        url 'https://www.gnu.org/licenses/gpl-3.0.txt'
                        distribution 'repo'
                    }
                }
            }
        } .writeTo("$buildDir/${project.name}-${version}.pom")
    }
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath

    options {
        setMemberLevel JavadocMemberLevel.PUBLIC
        setAuthor true

        links "https://docs.oracle.com/javase/8/docs/api/"
        links "https://square.github.io/okio/1.x/okio/"
        links "https://square.github.io/okhttp/3.x/okhttp/"
        links "https://fastily.github.io/jwiki/docs/gson/"

        // setOutputLevel JavadocOutputLevel.VERBOSE
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task packageJavadoc(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}